import asyncio

class PageValidator:
    """Maneja validaciones de p√°gina espec√≠ficas de MercadoLibre"""
    
    def __init__(self, page):
        self.page = page
    
    async def validate_page_after_navigation(self) -> bool:
        """Ejecuta todas las validaciones post-navegaci√≥n"""
        try:
            print("üîç Ejecutando validaciones post-navegaci√≥n...")
            
            await self._handle_location_popup()
            await self._apply_shipping_filter()
            
            if not await self._verify_page_loaded():
                return False
            
            print("‚úÖ Validaciones post-navegaci√≥n completadas")
            return True
            
        except Exception as e:
            print(f"‚ùå Error en validaciones post-navegaci√≥n: {e}")
            return False
    
    async def _handle_location_popup(self):
        """Maneja el popup de ubicaci√≥n"""
        try:
            print("üîç Verificando popup de ubicaci√≥n...")
            
            await self.page.wait_for_selector('text="Agregar ubicaci√≥n"', timeout=5000)
            print("üìç Popup de ubicaci√≥n detectado, haciendo clic en 'M√°s tarde'...")
            await self.page.click('text="M√°s tarde"')
            await asyncio.sleep(1)
                
        except Exception:
            print("üìç No se detect√≥ popup de ubicaci√≥n")
            pass
    
    async def _apply_shipping_filter(self):
        """Aplica filtro de env√≠o destacado"""
        try:
            print("üöõ Aplicando filtro de env√≠o destacado...")
            
            await self.page.wait_for_selector('#shipping_highlighted_fulfillment', timeout=10000)
            await self.page.click('#shipping_highlighted_fulfillment')
            print("‚úÖ Filtro de env√≠o aplicado")
            await asyncio.sleep(2)
            
        except Exception as e:
            print(f"‚ö†Ô∏è No se pudo aplicar el filtro de env√≠o: {e}")
    
    async def _verify_page_loaded(self) -> bool:
        """Verifica que la p√°gina de resultados haya cargado"""
        try:
            print("‚è≥ Verificando que la p√°gina haya cargado...")
            
            await self.page.wait_for_selector('li.ui-search-layout__item', timeout=15000)
            print("‚úÖ Elementos de productos detectados")
            return True
            
        except Exception as e:
            print(f"‚ùå Error verificando carga de p√°gina: {e}")
            return False
